package org.facilelogin.api.security;

import java.security.Provider;
import java.security.Security;
import java.util.Date;
import java.util.HashMap;

import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;

import com.nimbusds.jose.*;
import com.nimbusds.jose.crypto.*;
import com.nimbusds.jose.crypto.bc.BouncyCastleProviderSingleton;
import com.nimbusds.jwt.*;

public class NestedJWTBuilder {

	public static void main(String[] args) throws Exception {
		
		Provider bc = BouncyCastleProviderSingleton.getInstance();
		Security.addProvider(bc);

		System.out.println(buildNestedJWT());
	}

	private static String buildNestedJWT() throws Exception {

		KeyGenerator keyGen = KeyGenerator.getInstance("AES");
		keyGen.init(256);
		SecretKey secretKey = keyGen.generateKey();

		JWSSigner signer = new MACSigner(secretKey.getEncoded());

		JWTClaimsSet claimsSet = new JWTClaimsSet.Builder().subject("alice").issueTime(new Date()).issuer("wso2.com")
				.build();

		SignedJWT signedJWT = new SignedJWT(new JWSHeader(JWSAlgorithm.HS256), claimsSet);

		signedJWT.sign(signer);
		
		System.out.println(signedJWT.serialize());

		JWEObject jweObject = new JWEObject(
				new JWEHeader.Builder(JWEAlgorithm.DIR, EncryptionMethod.A256GCM).contentType("JWT").build(),
				new Payload(signedJWT));

		jweObject.encrypt(new DirectEncrypter(secretKey.getEncoded()));

		return jweObject.serialize();
	}

}
